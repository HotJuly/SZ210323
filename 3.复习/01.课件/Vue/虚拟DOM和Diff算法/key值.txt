1.key值的使用
	当Vue组件内部出现数据遍历渲染时,会给每项遍历的节点添加一个唯一的key值

2.常用作key值的数据
	1)将遍历得到的数据,从中取出唯一标识,例如:id
	2)将遍历得到的下标作为唯一标识
	3)如果遍历得到的数据本身就是唯一标识,也可以使用

3.key值的作用
	粗略了解:与diff算法有关,可以提高diff算法性能
	当组件数据发生变化,Vue此时会生成全新的虚拟DOM树,并与旧的虚拟DOM树进行对比,找到其中可以复用的DOM,
	此话中说的复用DOM,指的是复用上一次生成的真实DOM
	key值就是对比的关键

	first Render(初始化阶段):
		1.将template属性编译成为render函数
		2.调用render函数生成虚拟DOM树
		3.根据虚拟DOM树生成真实DOM树
		4.将真实DOM树替换掉页面上的el元素

	ReRender(更新阶段):
		1.调用render函数生成新的虚拟DOM树
		2.将新的虚拟DOM树和上次旧的虚拟DOM树进行比较
		3.找到可以复用的真实DOM,并保留下来(将上次生成的真实DOM的地址值存入新虚拟DOM的$el中)
		4.比较结束之后,检查当前所有的虚拟DOM节点,如果没有$el,立马创建全新的真实DOM,补齐该属性
		5.将最终的真实DOM树替换掉页面上的对应组件位置

		注意:期间2和3阶段就是diff算法

4.如果使用index作为key值,可能出现的问题?
	注意:其实,如果数组的数据,后续不会发生变化,使用index作为key值没有任何问题
	举例一:input框案例
		错误点:diff算法的确生效了,但是diff算法复用错真实DOM了,导致页面显示效果不对

	举例二:商品列表排序案例
		错误点:diff算法还是生效了,但是明明具有可以复用的真实DOM,最终由于key值问题,导致节点无法复用

5.使用唯一标识作为key的好处
	只要服务器数据不发生变化,前端的节点可以一直复用下去
